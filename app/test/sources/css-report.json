{"scsslint":{
  "app/sass/base/_alerts.scss": [
    {
      "line": 4,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Selector `extend_1` should be written in lowercase with hyphens",
      "linter": "SelectorFormat"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 2,
      "length": 18,
      "severity": "warning",
      "reason": "Properties should be ordered color, position, right, top",
      "linter": "PropertySortOrder"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 13,
      "column": 2,
      "length": 13,
      "severity": "warning",
      "reason": "Properties should be ordered border, border-radius, margin-bottom, padding",
      "linter": "PropertySortOrder"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 19,
      "column": 3,
      "length": 13,
      "severity": "warning",
      "reason": "Properties should be ordered color, margin-top",
      "linter": "PropertySortOrder"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 24,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 28,
      "column": 4,
      "length": 4,
      "severity": "warning",
      "reason": "Nesting should be no greater than 3, but was 4",
      "linter": "NestingDepth"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 36,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 38,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 40,
      "column": 3,
      "length": 17,
      "severity": "warning",
      "reason": "Name of placeholder `extend_1` should be written in all lowercase letters with hyphens instead of underscores",
      "linter": "NameFormat"
    },
    {
      "line": 42,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 44,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 46,
      "column": 3,
      "length": 17,
      "severity": "warning",
      "reason": "Name of placeholder `extend_1` should be written in all lowercase letters with hyphens instead of underscores",
      "linter": "NameFormat"
    },
    {
      "line": 48,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 50,
      "column": 20,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#dff0d8` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 51,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 51,
      "column": 16,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#d6e9c6` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 52,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 52,
      "column": 9,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#3c763d` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 53,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 53,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 54,
      "column": 21,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#c9e2b3` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 55,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 57,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#2b542c` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 59,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 61,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 61,
      "column": 20,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#d9edf7` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 62,
      "column": 16,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#bce8f1` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 63,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 63,
      "column": 9,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#31708f` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 64,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 64,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 65,
      "column": 21,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#a6e1ec` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 66,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 67,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 68,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#245269` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 70,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 72,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 72,
      "column": 20,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#fcf8e3` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 73,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 73,
      "column": 16,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#faebcc` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 74,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 74,
      "column": 9,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#8a6d3b` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 75,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 75,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 76,
      "column": 21,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#f7e1b5` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 77,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 78,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 79,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#66512c` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 81,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 83,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 83,
      "column": 20,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#f2dede` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 84,
      "column": 16,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#ebccd1` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 85,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 85,
      "column": 9,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#a94442` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 86,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 86,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 87,
      "column": 21,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#e4b9c0` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 88,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 89,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 90,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#843534` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 92,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/base/_backgrounds.scss": [
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Merge rule `.bg-confectionary--pink` with rule on line 1",
      "linter": "MergeableSelector"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/base/_button.scss": [
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 2,
      "length": 21,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, background-image, border, border-radius, color, cursor, display, font-size, font-weight, line-height, margin-bottom, padding, text-align, -ms-touch-action, touch-action, -moz-user-select, -ms-user-select, -webkit-user-select, user-select, vertical-align, white-space",
      "linter": "PropertySortOrder"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 2,
      "length": 30,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 16,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 21,
      "column": 2,
      "length": 25,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 22,
      "column": 2,
      "length": 22,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 23,
      "column": 2,
      "length": 21,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 24,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 24,
      "column": 20,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#732f73` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 25,
      "column": 17,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#732f73` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 25,
      "column": 17,
      "length": 7,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 27,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 29,
      "column": 3,
      "length": 42,
      "severity": "warning",
      "reason": "Properties should be ordered color, outline, outline-offset, text-decoration",
      "linter": "PropertySortOrder"
    },
    {
      "line": 31,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#333333` should be written as `#333`",
      "linter": "HexLength"
    },
    {
      "line": 31,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#333333` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 35,
      "column": 3,
      "length": 17,
      "severity": "warning",
      "reason": "Name of placeholder `extend_1` should be written in all lowercase letters with hyphens instead of underscores",
      "linter": "NameFormat"
    },
    {
      "line": 36,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 44,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 46,
      "column": 3,
      "length": 17,
      "severity": "warning",
      "reason": "Name of placeholder `extend_1` should be written in all lowercase letters with hyphens instead of underscores",
      "linter": "NameFormat"
    },
    {
      "line": 47,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 55,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 57,
      "column": 3,
      "length": 42,
      "severity": "warning",
      "reason": "Properties should be ordered color, outline, outline-offset, text-decoration",
      "linter": "PropertySortOrder"
    },
    {
      "line": 59,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#333333` should be written as `#333`",
      "linter": "HexLength"
    },
    {
      "line": 59,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#333333` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 61,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 63,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#333333` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 63,
      "column": 10,
      "length": 7,
      "severity": "warning",
      "reason": "Color `#333333` should be written as `#333`",
      "linter": "HexLength"
    },
    {
      "line": 65,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 66,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 67,
      "column": 3,
      "length": 27,
      "severity": "warning",
      "reason": "Name of placeholder `extend_2` should be written in all lowercase letters with hyphens instead of underscores",
      "linter": "NameFormat"
    },
    {
      "line": 68,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be followed by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 69,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 72,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/base/_layout.scss": [
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 3,
      "column": 2,
      "length": 31,
      "severity": "warning",
      "reason": "Prefer using placeholder selectors (e.g. %some-placeholder) with @extend",
      "linter": "PlaceholderInExtend"
    },
    {
      "line": 4,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 4,
      "column": 2,
      "length": 17,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 2,
      "length": 16,
      "severity": "warning",
      "reason": "Colon after property should be followed by one space",
      "linter": "SpaceAfterPropertyColon"
    },
    {
      "line": 8,
      "column": 2,
      "length": 16,
      "severity": "warning",
      "reason": "Properties should be ordered background-color, -moz-box-shadow, -webkit-box-shadow, box-shadow, margin, max-width, min-height, padding, text-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 10,
      "column": 20,
      "length": 4,
      "severity": "warning",
      "reason": "Color literals like `#fff` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 14,
      "column": 2,
      "length": 53,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 14,
      "column": 22,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 14,
      "column": 26,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 14,
      "column": 45,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 14,
      "column": 47,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 14,
      "column": 49,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 14,
      "column": 51,
      "length": 3,
      "severity": "warning",
      "reason": "`0.3` should be written without a leading zero as `.3`",
      "linter": "LeadingZero"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 15,
      "column": 2,
      "length": 50,
      "severity": "warning",
      "reason": "Avoid vendor prefixes.",
      "linter": "VendorPrefix"
    },
    {
      "line": 15,
      "column": 19,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 15,
      "column": 23,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 15,
      "column": 42,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 15,
      "column": 44,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 15,
      "column": 46,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 15,
      "column": 48,
      "length": 3,
      "severity": "warning",
      "reason": "`0.3` should be written without a leading zero as `.3`",
      "linter": "LeadingZero"
    },
    {
      "line": 16,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 16,
      "column": 14,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 16,
      "column": 18,
      "length": 3,
      "severity": "warning",
      "reason": "`0px` should be written without units as `0`",
      "linter": "ZeroUnit"
    },
    {
      "line": 16,
      "column": 37,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 16,
      "column": 39,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 16,
      "column": 41,
      "length": 1,
      "severity": "warning",
      "reason": "Commas in function arguments should be followed by a single space",
      "linter": "SpaceAfterComma"
    },
    {
      "line": 16,
      "column": 43,
      "length": 3,
      "severity": "warning",
      "reason": "`0.3` should be written without a leading zero as `.3`",
      "linter": "LeadingZero"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Avoid using id selectors",
      "linter": "IdSelector"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 20,
      "column": 9,
      "length": 3,
      "severity": "warning",
      "reason": "Color `red` should be written in hexadecimal form as `#ff0000`",
      "linter": "ColorKeyword"
    },
    {
      "line": 20,
      "column": 9,
      "length": 3,
      "severity": "warning",
      "reason": "Color literals like `red` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/base/_mediaqueries.scss": [
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 6,
      "column": 25,
      "length": 6,
      "severity": "warning",
      "reason": "Color `orange` should be written in hexadecimal form as `#ffa500`",
      "linter": "ColorKeyword"
    },
    {
      "line": 6,
      "column": 25,
      "length": 6,
      "severity": "warning",
      "reason": "Color literals like `orange` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 11,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 18,
      "column": 25,
      "length": 6,
      "severity": "warning",
      "reason": "Color `orange` should be written in hexadecimal form as `#ffa500`",
      "linter": "ColorKeyword"
    },
    {
      "line": 18,
      "column": 25,
      "length": 6,
      "severity": "warning",
      "reason": "Color literals like `orange` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 32,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 41,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 47,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 48,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 48,
      "column": 25,
      "length": 6,
      "severity": "warning",
      "reason": "Color `orange` should be written in hexadecimal form as `#ffa500`",
      "linter": "ColorKeyword"
    },
    {
      "line": 48,
      "column": 25,
      "length": 6,
      "severity": "warning",
      "reason": "Color literals like `orange` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 53,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 63,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 71,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 80,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 87,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/base/_reset.scss": [
    {
      "line": 1,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 5,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 6,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 7,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 10,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 14,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 15,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 16,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 17,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 18,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 18,
      "column": 3,
      "length": 9,
      "severity": "warning",
      "reason": "Properties should be ordered border, font, font-size, margin, padding, vertical-align",
      "linter": "PropertySortOrder"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 21,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 22,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 23,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 24,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Use `//` comments everywhere",
      "linter": "Comment"
    },
    {
      "line": 25,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 26,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 27,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 27,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 28,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 29,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 29,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 30,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 31,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 32,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 32,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 33,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 34,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 35,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 36,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 36,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 37,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 37,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 38,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 39,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 40,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 41,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 41,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 42,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 42,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 42,
      "column": 3,
      "length": 13,
      "severity": "warning",
      "reason": "Property `content` already defined on line 41",
      "linter": "DuplicateProperty"
    },
    {
      "line": 44,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 44,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 45,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 46,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 46,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 46,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    },
    {
      "line": 48,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 49,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 50,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 51,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 52,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 54,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 55,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 56,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 58,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 59,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 60,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 61,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 62,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 63,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 64,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 66,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 67,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 68,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 69,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 71,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 72,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 73,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 74,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 76,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 77,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 78,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 79,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 80,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 82,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 83,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    },
    {
      "line": 84,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Each selector in a comma sequence should be on its own line",
      "linter": "SingleLinePerSelector"
    }
  ],
  "app/sass/base/_typography.scss": [
    {
      "line": 4,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented with spaces, not tabs",
      "linter": "Indentation"
    },
    {
      "line": 12,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Opening curly brace `{` should be preceded by one space",
      "linter": "SpaceBeforeBrace"
    },
    {
      "line": 13,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 14,
      "column": 7,
      "length": 17,
      "severity": "warning",
      "reason": "Properties should be ordered color, font-family, font-size, line-height",
      "linter": "PropertySortOrder"
    },
    {
      "line": 16,
      "column": 14,
      "length": 7,
      "severity": "warning",
      "reason": "Color literals like `#732f73` should only be used in variable declarations; they should be referred to via variable everywhere else.",
      "linter": "ColorVariable"
    },
    {
      "line": 20,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 6 spaces",
      "linter": "Indentation"
    }
  ],
  "app/sass/base/mixins/_font-face.scss": [
    {
      "line": 1,
      "column": 57,
      "length": 2,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 2,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 2,
      "column": 16,
      "length": 11,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 2,
      "column": 40,
      "length": 3,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 3,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 5,
      "column": 30,
      "length": 6,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 30,
      "length": 13,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 90,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 131,
      "length": 6,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 176,
      "length": 7,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 200,
      "length": 2,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Rule declaration should be preceded by an empty line",
      "linter": "EmptyLineBetweenBlocks"
    },
    {
      "line": 8,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Line should be indented 2 spaces, but was indented 4 spaces",
      "linter": "Indentation"
    },
    {
      "line": 9,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Declaration should be terminated by a semicolon",
      "linter": "TrailingSemicolon"
    },
    {
      "line": 10,
      "column": 30,
      "length": 2,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 13,
      "column": 13,
      "length": 6,
      "severity": "warning",
      "reason": "@else should be placed on same line as previous curly brace",
      "linter": "ElsePlacement"
    },
    {
      "line": 19,
      "column": 1,
      "length": 1,
      "severity": "warning",
      "reason": "Files should end with a trailing newline",
      "linter": "FinalNewline"
    }
  ],
  "app/sass/main.scss": [
    {
      "line": 3,
      "column": 9,
      "length": 18,
      "severity": "warning",
      "reason": "Imported partial `base/_reset.scss` should be written as `base/reset`",
      "linter": "ImportPath"
    },
    {
      "line": 3,
      "column": 9,
      "length": 18,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 9,
      "length": 25,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 6,
      "column": 9,
      "length": 25,
      "severity": "warning",
      "reason": "Imported partial `base/_mediaqueries.scss` should be written as `base/mediaqueries`",
      "linter": "ImportPath"
    },
    {
      "line": 9,
      "column": 9,
      "length": 23,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 9,
      "column": 9,
      "length": 23,
      "severity": "warning",
      "reason": "Imported partial `base/_typography.scss` should be written as `base/typography`",
      "linter": "ImportPath"
    },
    {
      "line": 12,
      "column": 9,
      "length": 24,
      "severity": "warning",
      "reason": "Imported partial `base/_backgrounds.scss` should be written as `base/backgrounds`",
      "linter": "ImportPath"
    },
    {
      "line": 12,
      "column": 9,
      "length": 24,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 15,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 15,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Imported partial `base/_layout.scss` should be written as `base/layout`",
      "linter": "ImportPath"
    },
    {
      "line": 18,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 18,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Imported partial `base/_button.scss` should be written as `base/button`",
      "linter": "ImportPath"
    },
    {
      "line": 21,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Imported partial `base/_alerts.scss` should be written as `base/alerts`",
      "linter": "ImportPath"
    },
    {
      "line": 21,
      "column": 9,
      "length": 19,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    },
    {
      "line": 24,
      "column": 9,
      "length": 29,
      "severity": "warning",
      "reason": "Imported partial `base/mixins/_font-face.scss` should be written as `base/mixins/font-face`",
      "linter": "ImportPath"
    },
    {
      "line": 24,
      "column": 9,
      "length": 29,
      "severity": "warning",
      "reason": "Prefer single quoted strings",
      "linter": "StringQuotes"
    }
  ]
}}